user  nginx;
worker_processes 2;

pid        /var/run/nginx.pid;
error_log  /var/log/nginx/nginx.error.log warn;

events {
    worker_connections  100000;
}


http {
    #include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/null;
    #access_log  /var/log/dnmp/nginx.access.log  main;

    # hide verson string
    server_tokens  off;
    sendfile        on;
    #tcp_nopush     on;
    client_max_body_size 100M;

    upstream srm_swoft {
        server 106.54.7.136:18316 max_fails=3 fail_timeout=60;
        #server 172.22.22.120:18306 max_fails=3 fail_timeout=60;
        #server 172.22.22.130:18306 max_fails=3 fail_timeout=60;

        #curl -X PUT -d '{"weight":1, "max_fails":2, "fail_timeout":10}' http://106.54.7.136:8500/v1/kv/upstreams/srm_swoft/172.22.22.120:18306
        upsync 106.54.7.136:8540/v1/kv/upstreams/srm_swoft upsync_timeout=1m upsync_interval=10ms upsync_type=consul strong_dependency=on;
        #生成配置文件
        upsync_dump_path /conf/conf.d/srm_swoft.log;
        include /conf/conf.d/srm_swoft.log;
    }
    server{
        listen 80;
        location / {
            #proxy_next_upstream timeout;    #指定在何种情况下一个失败的请求应该被发送到下一台后端服务器
            #proxy_next_upstream_tries 2;    #设置重试次数，默认0表示不限制
            #proxy_next_upstream_timeout 1;  #设置重试最大超时时间，默认0表示不限制
            #proxy_read_timeout 1;           #连接成功后，后端服务器响应时间(代理接收超时时间)
            #proxy_connect_timeout 10;       #nginx连接后端的超时时间，一般不超过75s
            proxy_pass http://srm_swoft;
        }
    }

    include /etc/nginx/conf.d/*.conf;
}


