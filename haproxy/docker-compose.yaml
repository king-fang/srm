# 编排php,redis,nginx容器
version: "3.6" # 确定docker-composer文件的版本
services: # 代表就是一组服务 - 简单来说一组容器
  # server
  haproxy_server_173_3: # 这个表示服务的名称，课自定义; 注意不是容器名称
    image: haproxy # 指定容器的镜像文件
    ports: # 配置容器与宿主机的端口
      - "8103:8100" # web监听端口
      - "5603:5600" # 反向代理 mq 的端口
    networks: ## 引入外部预先定义的网段
       haproxy:
         ipv4_address: 173.200.7.3   #设置ip地址
    privileged: true # 让程序在root下运行
    volumes:
      - "/www/wwwroot/2007_SRM/haproxy:/haproxy"
      - "/www/wwwroot/2007_SRM/haproxy/keepalived/3:/keepalived"
    container_name: haproxy_server_173_3 # 这是容器的名称
    command: haproxy -f /haproxy/haproxy.cfg
  haproxy_server_173_2: # 这个表示服务的名称，课自定义; 注意不是容器名称
    image: haproxy # 指定容器的镜像文件
    ports: # 配置容器与宿主机的端口
      - "8102:8100"
      - "5602:5600"
    networks: ## 引入外部预先定义的网段
       haproxy:
         ipv4_address: 173.200.7.2   #设置ip地址
    privileged: true
    volumes:
      - "/www/wwwroot/2007_SRM/haproxy:/haproxy"
      - "/www/wwwroot/2007_SRM/haproxy/keepalived/2:/keepalived"
    container_name: haproxy_server_173_2 # 这是容器的名称
    command: haproxy -f /haproxy/haproxy.cfg
  # docker run -itd --name nginx_haproxy_173_5 -v /www/wwwroot/2007_SRM/nginx/conf/nginx.conf:/etc/nginx/nginx.conf -p 5600:5600 --network haproxy_haproxy -ip=173.200.7.5
  nginx_haproxy:
    image: nginx1.19 # 指定容器的镜像文件.
    ports: # 配置容器与宿主机的端口
      - "5600:5600"
    networks: ## 引入外部预先定义的网段
       haproxy:
         ipv4_address: 173.200.7.5   #设置ip地址
    volumes:
      - "/www/wwwroot/2007_SRM/nginx/conf:/etc/nginx"
    container_name: nginx_haproxy_173_5 # 这是容器的
    # command: nginx -c /nginx/conf/nginx.conf
# 设置网络模块
networks:
  # 自定义网络
  haproxy:
    driver: bridge
    ipam: #定义网段
      config:
        - subnet: "173.200.7.0/24"
